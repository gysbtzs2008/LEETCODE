class Solution(object):
    def twoSum(self, nums, target):
        dic={}
        for i in xrange(len(nums)):
            if nums[i] not in dic:
                dic[target-nums[i]]=i  # record difference between nums[i] and target as well as index of nums[i]
            else:
                return [dic[nums[i]],i]
#这个方法的复杂度为O（n),用空间换时间

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        i=0
        j=1
        for i in range (0, len(nums)-1):
            for j in range(i+1,len(nums)):
                if (nums[i]+nums[j])==target:
                    a=[i,j]
                    return a
这个方法为最土的方法，时间复杂度为O（n2)，但是空间复杂度低
